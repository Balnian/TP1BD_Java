/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biblioclg;

import java.sql.*;
import oracle.jdbc.pool.*;
import oracle.jdbc.internal.OracleTypes;

/**
 *
 * @author Francis
 */
public class ConsultationLivre extends javax.swing.JFrame {

    /**
     * Creates new form ConsultationLivre
     */
     ResultSet rset;
    
    Connection conn;
    PreparedStatement stm ;
    CallableStatement callstm;
    
    public ConsultationLivre() {
        conn = BiblioClg.MakeConnection();
        
        initComponents();
        fillGenre();
    }
    private void fillGenre(){
        String sql = "select * from genre";
        Statement stm2=null;
        ResultSet rset2=null;
        try {
            
            stm2 = conn.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rset2 = stm2.executeQuery(sql);
            
            Cb_Genre.removeAllItems();
            while(rset2.next())
                Cb_Genre.addItem(new ComboItem(rset2.getString(2), rset2.getString(2)));
            
            //System.out.println(rset.getString(2));
            
            
            
        } catch (Exception e) {
            System.out.println("Erreur Fillset: "+e.getMessage());
        }
        finally{
            try {
                rset2.close();
                stm2.close();
            } catch (Exception e) {
            }
            
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cb_Genre = new javax.swing.JComboBox();
        Tb_Recherche = new javax.swing.JTextField();
        Titre = new javax.swing.JLabel();
        Auteur = new javax.swing.JLabel();
        Bt_Rechercher = new javax.swing.JButton();
        Cb_TypeR = new javax.swing.JComboBox();
        Lb_TypeR = new javax.swing.JLabel();
        Lb_GenreR = new javax.swing.JLabel();
        Lb_Titre = new javax.swing.JLabel();
        Lb_Auteur = new javax.swing.JLabel();
        Bt_Prec = new javax.swing.JButton();
        Bt_Suiv = new javax.swing.JButton();
        Bt_Emprunter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        Cb_Genre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Titre.setText("Titre:");

        Auteur.setText("Auteur:");

        Bt_Rechercher.setText("Rechercher");
        Bt_Rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt_RechercherActionPerformed(evt);
            }
        });

        Cb_TypeR.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tous", "Auteur", "Titre" }));

        Lb_TypeR.setText("Type de recherche:");

        Lb_GenreR.setText("Genre:");

        Lb_Titre.setText("jLabel3");

        Lb_Auteur.setText("jLabel3");

        Bt_Prec.setText("Précédent");
        Bt_Prec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt_PrecActionPerformed(evt);
            }
        });

        Bt_Suiv.setText("Suivant");
        Bt_Suiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt_SuivActionPerformed(evt);
            }
        });

        Bt_Emprunter.setText("Emprunter");
        Bt_Emprunter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt_EmprunterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Lb_GenreR)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Cb_Genre, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Lb_TypeR)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Cb_TypeR, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tb_Recherche, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Bt_Rechercher))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Auteur)
                            .addComponent(Titre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Lb_Titre)
                            .addComponent(Lb_Auteur)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(Bt_Prec, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(Bt_Suiv, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(Bt_Emprunter)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Tb_Recherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bt_Rechercher)
                    .addComponent(Cb_TypeR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lb_TypeR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cb_Genre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lb_GenreR))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Titre)
                    .addComponent(Lb_Titre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Auteur)
                    .addComponent(Lb_Auteur))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bt_Prec)
                    .addComponent(Bt_Suiv))
                .addGap(31, 31, 31)
                .addComponent(Bt_Emprunter)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Bt_RechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt_RechercherActionPerformed
        switch(Cb_TypeR.getSelectedIndex())
        {
            case 1:
                RechercheA();
                break;
            case 2:
                RechercheT();
                break;
            default:
                Recherche();
                    
                
        }
        FillBox();// TODO add your handling code here:
    }//GEN-LAST:event_Bt_RechercherActionPerformed

    private void RechercheA(){
        String sql = "SELECT l.NUMLIVRE, l.TITRE, l.AUTEUR, g.NOMGENERE  FROM LIVRE l inner join genre g on l.NUMGENRE = g.NUMGENRE  WHERE l.AUTEUR like concat('%',concat(?,'%')) and g.NOMGENERE = ?";
        
        try {
            stm = conn.prepareStatement(sql,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            stm.setString(1, Tb_Recherche.getText());
            stm.setString(2, Cb_Genre.getSelectedItem().toString());
            rset = stm.executeQuery();
            rset.next();
              try{
            rset.first();
            if (rset.isFirst()) {
                Bt_Prec.setEnabled(false);
            }
            else{
                Bt_Prec.setEnabled(true);
            }
            if (rset.isLast()) {
                Bt_Suiv.setEnabled(false);
            }
            else{
                 Bt_Suiv.setEnabled(true);
            }
        }catch (Exception ex) {}
             stm.clearParameters();
//            callstm.setString(3, Cb_Genre.getSelectedItem().toString());
//             callstm = conn.prepareCall(sql,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
//            callstm.registerOutParameter(1, OracleTypes.CURSOR);
//            callstm.setString(2, Tb_Recherche.getText());
//            callstm.setString(3, Cb_Genre.getSelectedItem().toString());
//            callstm.execute();
//            rset = (ResultSet)callstm.getObject(1);
            //refreshData();
        } catch (Exception e) {
        }
        finally{
            
    } 
    }
    private void RechercheT(){
        String sql = "SELECT l.NUMLIVRE, l.TITRE, l.AUTEUR, g.NOMGENERE FROM LIVRE l inner join genre g on l.NUMGENRE = g.NUMGENRE  WHERE l.TITRE like concat('%',concat(?,'%')) and g.NOMGENERE = ?";
        
        try {
            stm = conn.prepareStatement(sql,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            stm.setString(1, Tb_Recherche.getText());
            stm.setString(2, Cb_Genre.getSelectedItem().toString());
            rset = stm.executeQuery();
            rset.next();
              try{
            rset.first();
            if (rset.isFirst()) {
                Bt_Prec.setEnabled(false);
            }
            else{
                Bt_Prec.setEnabled(true);
            }
            if (rset.isLast()) {
                Bt_Suiv.setEnabled(false);
            }
            else{
                 Bt_Suiv.setEnabled(true);
            }
        }catch (Exception ex) {}
             stm.clearParameters();
//            callstm.setString(3, Cb_Genre.getSelectedItem().toString());
//             callstm = conn.prepareCall(sql,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
//            callstm.registerOutParameter(1, OracleTypes.CURSOR);
//            callstm.setString(2, Tb_Recherche.getText());
//            callstm.setString(3, Cb_Genre.getSelectedItem().toString());
//            callstm.execute();
//            rset = (ResultSet)callstm.getObject(1);
            //refreshData();
        } catch (Exception e) {
        }
        finally{
            
    } 
    }
    private void Recherche(){
        String sql = "SELECT l.NUMLIVRE, l.TITRE, l.AUTEUR, g.NOMGENERE    FROM LIVRE l inner join genre g on l.NUMGENRE = g.NUMGENRE    WHERE (    l.AUTEUR like concat('%',concat(?,'%'))    or l.TITRE like concat('%',concat(?,'%'))    )   and g.NOMGENERE = ?";
        
        try {
            stm = conn.prepareStatement(sql,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            stm.setString(1, Tb_Recherche.getText());
            stm.setString(2, Tb_Recherche.getText());
            stm.setString(3, Cb_Genre.getSelectedItem().toString());
            rset = stm.executeQuery();
            rset.next();
              try{
            rset.first();
            if (rset.isFirst()) {
                Bt_Prec.setEnabled(false);
            }
            else{
                Bt_Prec.setEnabled(true);
            }
            if (rset.isLast()) {
                Bt_Suiv.setEnabled(false);
            }
            else{
                 Bt_Suiv.setEnabled(true);
            }
        }catch (Exception ex) {}
             stm.clearParameters();
//            callstm.setString(3, Cb_Genre.getSelectedItem().toString());
//             callstm = conn.prepareCall(sql,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
//            callstm.registerOutParameter(1, OracleTypes.CURSOR);
//            callstm.setString(2, Tb_Recherche.getText());
//            callstm.setString(3, Cb_Genre.getSelectedItem().toString());
//            callstm.execute();
//            rset = (ResultSet)callstm.getObject(1);
            //refreshData();
        } catch (Exception e) {
        }
        finally{
            
    } 
    }
    private void refreshData(){
       FillSet();
        try{
            rset.first();
            if (rset.isFirst()) {
                Bt_Prec.setEnabled(false);
            }
            else{
                Bt_Prec.setEnabled(true);
            }
            if (rset.isLast()) {
                Bt_Suiv.setEnabled(false);
            }
            else{
                 Bt_Suiv.setEnabled(true);
            }
        }catch (Exception ex) {}
       
        FillBox();
    }
    private void FillSet(){
       
        
    }
    private void FillBox(){
        try {
             Lb_Auteur.setText(rset.getString(2));
             Lb_Titre.setText(rset.getString(3));
        } catch (Exception e) {
        }
        
    }
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
         try
        {
            if (conn!=null)
                conn.close();
            System.out.println("connexion fermée");
        }
        catch(SQLException se){
        System.out.println("connexion fermée");
        }         // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void Bt_SuivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt_SuivActionPerformed
    try {
            
                rset.next();
                Bt_Prec.setEnabled(true);
                FillBox();
            
            if(rset.isLast())
                Bt_Suiv.setEnabled(false);
        } catch (Exception e) {
             System.out.println("Shit appen:"+e.getMessage());
        }        // TODO add your handling code here:
    }//GEN-LAST:event_Bt_SuivActionPerformed

    private void Bt_PrecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt_PrecActionPerformed
        try {
            
                rset.previous();
                Bt_Suiv.setEnabled(true);
                FillBox();
            
            if(rset.isFirst())
                Bt_Prec.setEnabled(false);
        } catch (Exception e) {
             System.out.println("Shit appen:"+e.getMessage());
        }         // TODO add your handling code here:
    }//GEN-LAST:event_Bt_PrecActionPerformed

    private void Bt_EmprunterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt_EmprunterActionPerformed
        Emprunt emp = new Emprunt();
        emp.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_Bt_EmprunterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultationLivre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultationLivre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultationLivre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultationLivre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultationLivre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Auteur;
    private javax.swing.JButton Bt_Emprunter;
    private javax.swing.JButton Bt_Prec;
    private javax.swing.JButton Bt_Rechercher;
    private javax.swing.JButton Bt_Suiv;
    private javax.swing.JComboBox Cb_Genre;
    private javax.swing.JComboBox Cb_TypeR;
    private javax.swing.JLabel Lb_Auteur;
    private javax.swing.JLabel Lb_GenreR;
    private javax.swing.JLabel Lb_Titre;
    private javax.swing.JLabel Lb_TypeR;
    private javax.swing.JTextField Tb_Recherche;
    private javax.swing.JLabel Titre;
    // End of variables declaration//GEN-END:variables
}
